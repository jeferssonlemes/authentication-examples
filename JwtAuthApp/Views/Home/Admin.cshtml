@{
    ViewData["Title"] = "Painel de Administra√ß√£o";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2><i class="fas fa-cogs me-2"></i>Painel de Administra√ß√£o</h2>
                    <p class="text-muted mb-0">Ferramentas avan√ßadas de administra√ß√£o e relat√≥rios</p>
                </div>
                <div class="text-end">
                    <span id="userRoleBadge" class="badge bg-danger fs-6">Carregando...</span>
                </div>
            </div>

            <!-- Alerta de permiss√µes -->
            <div id="accessDeniedAlert" class="alert alert-warning d-none">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>Acesso Limitado:</strong> Algumas funcionalidades est√£o restritas ao seu n√≠vel de permiss√£o.
            </div>

            <!-- Debug Button - Tempor√°rio -->
            <div class="text-center mb-3">
                <button class="btn btn-warning" onclick="forceShowSections()">
                    üîß DEBUG: For√ßar Mostrar Todas as Se√ß√µes
                </button>
                <button class="btn btn-info" onclick="debugInfo()">
                    üìä DEBUG: Mostrar Info
                </button>
            </div>

            <!-- Loading indicator -->
            <div id="adminContent" class="text-center py-5" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Carregando...</span>
                </div>
                <p class="mt-3 text-muted">Verificando permiss√µes e carregando dados...</p>
            </div>

            <!-- Conte√∫do principal -->
            <div id="adminData">
                <!-- AdminOnly Section -->
                <div id="adminOnlySection">
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="fas fa-shield-alt me-2"></i>
                                <strong>√Årea Administrativa:</strong> Funcionalidades exclusivas para administradores do
                                sistema.
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header bg-danger text-white">
                                    <h5 class="mb-0">üîß Configura√ß√µes do Sistema</h5>
                                </div>
                                <div class="card-body">
                                    <div id="systemConfig" class="mb-3">
                                        <div class="text-muted small">Carregando configura√ß√µes...</div>
                                    </div>
                                    <button class="btn btn-primary btn-sm me-2" onclick="loadSystemConfig()">
                                        <i class="fas fa-sync me-1"></i>Recarregar
                                    </button>
                                    <button class="btn btn-warning btn-sm" onclick="updateSystemConfig()">
                                        <i class="fas fa-edit me-1"></i>Atualizar
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header bg-dark text-white">
                                    <h5 class="mb-0">üìä Logs do Sistema</h5>
                                </div>
                                <div class="card-body">
                                    <div id="systemLogs" class="mb-3">
                                        <div class="text-muted small">Carregando logs...</div>
                                    </div>
                                    <button class="btn btn-info btn-sm me-2" onclick="loadSystemLogs()">
                                        <i class="fas fa-sync me-1"></i>Recarregar
                                    </button>
                                    <button class="btn btn-danger btn-sm" onclick="clearCache()">
                                        <i class="fas fa-trash me-1"></i>Limpar Cache
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- ModeratorOrAbove Section -->
                <div id="moderatorOrAboveSection">
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="alert alert-secondary">
                                <i class="fas fa-users-cog me-2"></i>
                                <strong>√Årea de Modera√ß√£o:</strong> Funcionalidades dispon√≠veis para moderadores e
                                administradores.
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header bg-success text-white">
                                    <h5 class="mb-0">üìà Relat√≥rios</h5>
                                </div>
                                <div class="card-body">
                                    <div id="reportsData" class="mb-3">
                                        <div class="text-muted small">Carregando relat√≥rios...</div>
                                    </div>
                                    <button class="btn btn-success btn-sm" onclick="loadReports()">
                                        <i class="fas fa-sync me-1"></i>Recarregar
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header bg-info text-white">
                                    <h5 class="mb-0">üìä Analytics</h5>
                                </div>
                                <div class="card-body">
                                    <div id="analyticsData" class="mb-3">
                                        <div class="text-muted small">Carregando analytics...</div>
                                    </div>
                                    <button class="btn btn-info btn-sm" onclick="loadAnalytics()">
                                        <i class="fas fa-sync me-1"></i>Recarregar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Se√ß√£o de Testes HTTP -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="mb-0">üß™ Testes de M√©todos HTTP e Autoriza√ß√£o</h5>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <h6 class="text-danger">AdminOnly Endpoints</h6>
                                            <button class="btn btn-outline-success btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods', 'GET', 'AdminOnly')">
                                                GET /test-methods
                                            </button>
                                            <button class="btn btn-outline-primary btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods', 'POST', 'AdminOnly')">
                                                POST /test-methods
                                            </button>
                                            <button class="btn btn-outline-warning btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods', 'PUT', 'AdminOnly')">
                                                PUT /test-methods
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods', 'DELETE', 'AdminOnly')">
                                                DELETE /test-methods
                                            </button>
                                            <hr>
                                            <button class="btn btn-danger btn-sm w-100"
                                                onclick="testAdminOnly('clear-cache')">
                                                DELETE /clear-cache (Original)
                                            </button>
                                        </div>
                                        <div class="col-md-3">
                                            <h6 class="text-warning">ModeratorOrAbove Endpoints</h6>
                                            <button class="btn btn-outline-success btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods-mod', 'GET', 'ModeratorOrAbove')">
                                                GET /test-methods-mod
                                            </button>
                                            <button class="btn btn-outline-primary btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods-mod', 'POST', 'ModeratorOrAbove')">
                                                POST /test-methods-mod
                                            </button>
                                            <button class="btn btn-outline-warning btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods-mod', 'PUT', 'ModeratorOrAbove')">
                                                PUT /test-methods-mod
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm mb-1 w-100"
                                                onclick="testHttpMethod('test-methods-mod', 'DELETE', 'ModeratorOrAbove')">
                                                DELETE /test-methods-mod
                                            </button>
                                        </div>
                                        <div class="col-md-6">
                                            <h6 class="text-info">Resultado dos Testes</h6>
                                            <div id="testResults" class="border rounded p-2 bg-light"
                                                style="min-height: 200px; max-height: 300px; overflow-y: auto;">
                                                <p class="text-muted mb-0 small">Os resultados dos testes aparecer√£o
                                                    aqui...</p>
                                            </div>
                                            <button class="btn btn-outline-info btn-sm mt-2 w-100"
                                                onclick="clearTestResults()">
                                                üßπ Limpar Resultados
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Se√ß√£o de Testes de Seguran√ßa -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header bg-dark text-white">
                                <h5 class="mb-0">üîí Testes de Seguran√ßa</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="card h-100">
                                            <div class="card-header bg-warning text-dark">
                                                <h6 class="mb-0">üõ°Ô∏è Teste de Prote√ß√£o CSRF</h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <button class="btn btn-sm btn-outline-primary me-2"
                                                        onclick="window.csrfHelper.getToken()">
                                                        Obter Token
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-info me-2"
                                                        onclick="window.csrfHelper.renewToken()">
                                                        Renovar Token
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-secondary"
                                                        onclick="window.csrfHelper.clearToken()">
                                                        Limpar Token
                                                    </button>
                                                </div>
                                                <div class="mb-3">
                                                    <button class="btn btn-sm btn-danger me-2"
                                                        onclick="testWithoutCSRF()">
                                                        üö® Testar SEM CSRF
                                                    </button>
                                                    <button class="btn btn-sm btn-success" onclick="testWithCSRF()">
                                                        ‚úÖ Testar COM CSRF
                                                    </button>
                                                </div>
                                                <div id="csrfTestResults" class="mt-3">
                                                    <p class="text-muted mb-0 small">Resultados dos testes CSRF
                                                        aparecer√£o aqui...</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card h-100">
                                            <div class="card-header bg-danger text-white">
                                                <h6 class="mb-0">üö® Teste de Prote√ß√£o XSS</h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <label class="form-label small">Testar Input Malicioso:</label>
                                                    <input type="text" id="xssTestInput"
                                                        class="form-control form-control-sm"
                                                        placeholder="Digite algo como: <script>alert('XSS')</script>">
                                                </div>
                                                <div class="mb-3">
                                                    <button class="btn btn-sm btn-danger me-2"
                                                        onclick="testXSSVulnerability()">
                                                        üö® Testar XSS
                                                    </button>
                                                    <button class="btn btn-sm btn-success me-2"
                                                        onclick="testXSSProtection()">
                                                        ‚úÖ Testar Prote√ß√£o
                                                    </button>
                                                    <button class="btn btn-sm btn-info" onclick="checkSecurityStatus()">
                                                        üìä Status Seguran√ßa
                                                    </button>
                                                    <button class="btn btn-sm btn-secondary"
                                                        onclick="testSecuritySimple()">
                                                        üîß Teste Simples
                                                    </button>
                                                </div>
                                                <div id="xssTestResults" class="mt-3">
                                                    <p class="text-muted mb-0 small">Resultados dos testes XSS
                                                        aparecer√£o aqui...</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Mostrar navbar
        document.getElementById('mainNav').style.display = 'block';

        // Verificar autentica√ß√£o
        checkAuthentication();

        // Verificar permiss√µes e carregar dados
        checkAdminPermissions();

        // Fun√ß√µes de Debug
        function forceShowSections() {
            document.getElementById('adminOnlySection').style.display = 'block';
            document.getElementById('moderatorOrAboveSection').style.display = 'block';
            document.getElementById('accessDeniedAlert').classList.add('d-none');

            // Carrega dados
            loadSystemConfig();
            loadSystemLogs();
            loadReports();
            loadAnalytics();

            console.log('Se√ß√µes for√ßadas a aparecer!');
        }

        function debugInfo() {
            const userData = JSON.parse(localStorage.getItem('user_data') || '{}');
            const jwt = localStorage.getItem('jwt_token');

            console.log('=== DEBUG INFO ===');
            console.log('User Data:', userData);
            console.log('JWT Token:', jwt ? 'Existe' : 'N√£o existe');
            console.log('UserRole:', userData.role);

            alert(`
                                DEBUG INFO:
                                - User Role: ${userData.role || 'Undefined'}
                                - JWT Token: ${jwt ? 'Existe' : 'N√£o existe'}
                                - AdminOnly Section: ${document.getElementById('adminOnlySection').style.display}
                                - ModeratorOrAbove Section: ${document.getElementById('moderatorOrAboveSection').style.display}
                                - AccessDenied Alert: ${document.getElementById('accessDeniedAlert').classList.contains('d-none') ? 'Hidden' : 'Visible'}
                                            `);
        }

        function checkAdminPermissions() {
            const userData = JSON.parse(localStorage.getItem('user_data') || '{}');
            const userRole = userData.role;

            console.log('User Data:', userData);
            console.log('User Role:', userRole);

            // Verificar se √© Admin (considerando duplica√ß√£o como "Admin,Admin")
            const isAdmin = !userRole || userRole.includes('Admin');
            const isModerator = userRole && userRole.includes('Moderator') && !userRole.includes('Admin');

            console.log('Is Admin:', isAdmin);
            console.log('Is Moderator:', isModerator);

            // Atualizar badge do usu√°rio
            const displayRole = isAdmin ? 'Admin' : isModerator ? 'Moderator' : 'User';
            document.getElementById('userRoleBadge').textContent = `N√≠vel: ${displayRole}`;
            document.getElementById('userRoleBadge').className = `badge fs-6 ${isAdmin ? 'bg-danger' : isModerator ? 'bg-warning' : 'bg-secondary'}`;

            // Sempre esconder o AccessDenied Alert primeiro
            document.getElementById('accessDeniedAlert').classList.add('d-none');

            if (isAdmin) {
                // Admin v√™ tudo - se√ß√µes j√° vis√≠veis por padr√£o
                document.getElementById('adminOnlySection').style.display = 'block';
                document.getElementById('moderatorOrAboveSection').style.display = 'block';
                console.log('Loading data for Admin...');
                loadSystemConfig();
                loadSystemLogs();
                loadReports();
                loadAnalytics();
            } else if (isModerator) {
                // Moderator v√™ apenas se√ß√£o ModeratorOrAbove
                document.getElementById('adminOnlySection').style.display = 'none';
                document.getElementById('moderatorOrAboveSection').style.display = 'block';
                document.getElementById('accessDeniedAlert').classList.remove('d-none');
                console.log('Loading data for Moderator...');
                loadReports();
                loadAnalytics();
            } else {
                // User comum n√£o v√™ nada especial
                document.getElementById('adminOnlySection').style.display = 'none';
                document.getElementById('moderatorOrAboveSection').style.display = 'none';
                document.getElementById('accessDeniedAlert').classList.remove('d-none');
                document.getElementById('accessDeniedAlert').innerHTML =
                    '<i class="fas fa-ban me-2"></i><strong>Acesso Negado:</strong> Voc√™ n√£o tem permiss√£o para acessar as funcionalidades administrativas.';
                document.getElementById('accessDeniedAlert').className = 'alert alert-danger';
            }
        }

        // Fun√ß√µes para carregar dados AdminOnly
        async function loadSystemConfig() {
            try {
                const token = localStorage.getItem('jwt_token');
                const response = await fetch('/api/admin/system-config', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });

                if (response.ok) {
                    const data = await response.json();
                    document.getElementById('systemConfig').innerHTML = `
                                                                                                                                        <div class="small">
                                                                                                                                            <strong>Servidor:</strong> ${data.configs.serverName}<br>
                                                                                                                                            <strong>Vers√£o:</strong> ${data.configs.version}<br>
                                                                                                                                            <strong>Ambiente:</strong> ${data.configs.environment}<br>
                                                                                                                                            <strong>M√°x. Usu√°rios:</strong> ${data.configs.maxUsers}
                                                                                                                                        </div>`;
                } else if (response.status === 403) {
                    document.getElementById('systemConfig').innerHTML = '<div class="text-danger small">‚ùå Acesso negado!</div>';
                }
            } catch (error) {
                document.getElementById('systemConfig').innerHTML = '<div class="text-danger small">‚ùå Erro: ' + error.message + '</div>';
            }
        }

        async function loadSystemLogs() {
            try {
                const token = localStorage.getItem('jwt_token');
                const response = await fetch('/api/admin/system-logs', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });

                if (response.ok) {
                    const data = await response.json();
                    document.getElementById('systemLogs').innerHTML = `
                                                                                                                                        <div class="small">
                                                                                                                                            <strong>Total de Entradas:</strong> ${data.totalEntries}<br>
                                                                                                                                            <strong>Erros Cr√≠ticos:</strong> ${data.criticalErrors}<br>
                                                                                                                                            <strong>Avisos:</strong> ${data.warnings}<br>
                                                                                                                                            <strong>√öltimas entradas:</strong> ${data.logs.length}
                                                                                                                                        </div>`;
                } else if (response.status === 403) {
                    document.getElementById('systemLogs').innerHTML = '<div class="text-danger small">‚ùå Acesso negado!</div>';
                }
            } catch (error) {
                document.getElementById('systemLogs').innerHTML = '<div class="text-danger small">‚ùå Erro: ' + error.message + '</div>';
            }
        }

        async function updateSystemConfig() {
            try {
                const token = localStorage.getItem('jwt_token');
                const response = await fetch('/api/admin/system-config', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ updated: true })
                });

                if (response.ok) {
                    const data = await response.json();
                    alert('‚úÖ ' + data.message);
                } else if (response.status === 403) {
                    alert('‚ùå Acesso negado! Apenas administradores podem atualizar configura√ß√µes.');
                }
            } catch (error) {
                alert('‚ùå Erro: ' + error.message);
            }
        }

        async function clearCache() {
            try {
                const token = localStorage.getItem('jwt_token');
                const response = await fetch('/api/admin/clear-cache', {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    const data = await response.json();
                    alert('‚úÖ ' + data.message);
                } else if (response.status === 403) {
                    alert('‚ùå Acesso negado! Apenas administradores podem limpar o cache.');
                } else {
                    alert(`‚ùå Erro: Status ${response.status}`);
                }
            } catch (error) {
                alert('‚ùå Erro: ' + error.message);
            }
        }

        // Fun√ß√µes para carregar dados ModeratorOrAbove
        async function loadReports() {
            try {
                const token = localStorage.getItem('jwt_token');
                const response = await fetch('/api/admin/reports', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });

                if (response.ok) {
                    const data = await response.json();
                    document.getElementById('reportsData').innerHTML = `
                                                                                                                                        <div class="small">
                                                                                                                                            <strong>Usu√°rios Ativos:</strong> ${data.reports.userActivity.activeUsers}<br>
                                                                                                                                            <strong>Total de Logins:</strong> ${data.reports.userActivity.totalLogins}<br>
                                                                                                                                            <strong>Produtos:</strong> ${data.reports.productStats.totalProducts}<br>
                                                                                                                                            <strong>Uptime:</strong> ${data.reports.systemPerformance.uptime}
                                                                                                                                        </div>`;
                } else if (response.status === 403) {
                    document.getElementById('reportsData').innerHTML = '<div class="text-danger small">‚ùå Acesso negado!</div>';
                }
            } catch (error) {
                document.getElementById('reportsData').innerHTML = '<div class="text-danger small">‚ùå Erro: ' + error.message + '</div>';
            }
        }

        async function loadAnalytics() {
            try {
                const token = localStorage.getItem('jwt_token');
                const response = await fetch('/api/admin/analytics', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });

                if (response.ok) {
                    const data = await response.json();
                    document.getElementById('analyticsData').innerHTML = `
                                                                                                                                        <div class="small">
                                                                                                                                            <strong>Taxa de Convers√£o:</strong> ${data.analytics.conversionRate}%<br>
                                                                                                                                            <strong>Feature Mais Popular:</strong> ${data.analytics.popularFeatures[0].feature}<br>
                                                                                                                                            <strong>Distribui√ß√£o:</strong> Brasil ${data.analytics.geographicDistribution.brazil}%<br>
                                                                                                                                            <strong>Insights:</strong> ${data.insights.length} dispon√≠veis
                                                                                                                                        </div>`;
                } else if (response.status === 403) {
                    document.getElementById('analyticsData').innerHTML = '<div class="text-danger small">‚ùå Acesso negado!</div>';
                }
            } catch (error) {
                document.getElementById('analyticsData').innerHTML = '<div class="text-danger small">‚ùå Erro: ' + error.message + '</div>';
            }
        }

        // Fun√ß√£o principal para testar todos os m√©todos HTTP com CSRF
        async function testHttpMethod(endpoint, method, policy) {
            const userData = JSON.parse(localStorage.getItem('user_data') || '{}');

            try {
                const body = (method === 'POST' || method === 'PUT') ? JSON.stringify({
                    test: true,
                    method: method,
                    timestamp: new Date().toISOString()
                }) : undefined;

                // Usar o CSRF helper para fazer a requisi√ß√£o segura
                const response = await window.csrfHelper.securedFetch(`/api/admin/${endpoint}`, {
                    method: method,
                    body: body
                });

                let responseData = null;
                try {
                    responseData = await response.json();
                } catch (e) {
                    responseData = { message: 'Resposta n√£o √© JSON v√°lido' };
                }

                const resultHtml = `
                                                                                                                                    <div class="border-bottom pb-2 mb-2">
                                                                                                                                        <div class="small">
                                                                                                                                            <strong>${method} /${endpoint}</strong> (${policy})<br>
                                                                                                                                            <strong>Usu√°rio:</strong> ${userData.role}<br>
                                                                                                                                            <strong>Status:</strong> <span class="${response.ok ? 'text-success' : 'text-danger'}">${response.status}</span><br>
                                                                                                                                            <strong>Resultado:</strong> ${response.ok ? '‚úÖ Sucesso' : '‚ùå Falhou'}<br>
                                                                                                                                            ${response.ok ? `<strong>Resposta:</strong> ${responseData.message || 'OK'}` : `<strong>Erro:</strong> ${responseData.error || 'Acesso negado'}`}<br>
                                                                                                                                            ${responseData.csrfValidated ? '<strong>üõ°Ô∏è CSRF:</strong> Validado<br>' : ''}
                                                                                                                                            <small class="text-muted">${new Date().toLocaleTimeString()}</small>
                                                                                                                                        </div>
                                                                                                                                    </div>
                                                                                                                                `;

                appendTestResults(resultHtml);
            } catch (error) {
                const errorHtml = `
                                                                                                                                    <div class="border-bottom pb-2 mb-2">
                                                                                                                                        <div class="text-danger small">
                                                                                                                                            <strong>${method} /${endpoint}</strong> (${policy})<br>
                                                                                                                                            <strong>‚ùå Erro:</strong> ${error.message}<br>
                                                                                                                                            <small class="text-muted">${new Date().toLocaleTimeString()}</small>
                                                                                                                                        </div>
                                                                                                                                    </div>
                                                                                                                                `;
                appendTestResults(errorHtml);
            }
        }

        // Fun√ß√£o para testar o endpoint original de clear-cache com CSRF
        async function testAdminOnly(endpoint) {
            const userData = JSON.parse(localStorage.getItem('user_data') || '{}');

            try {
                // Usar o CSRF helper para fazer a requisi√ß√£o segura
                const response = await window.csrfHelper.securedFetch(`/api/admin/${endpoint}`, {
                    method: endpoint === 'clear-cache' ? 'DELETE' : 'GET'
                });

                let responseData = null;
                try {
                    responseData = await response.json();
                } catch (e) {
                    responseData = { message: 'Resposta n√£o √© JSON v√°lido' };
                }

                const resultHtml = `
                                                                                                                                    <div class="border-bottom pb-2 mb-2">
                                                                                                                                        <div class="small">
                                                                                                                                            <strong>DELETE /${endpoint}</strong> (Original)<br>
                                                                                                                                            <strong>Usu√°rio:</strong> ${userData.role}<br>
                                                                                                                                            <strong>Status:</strong> <span class="${response.ok ? 'text-success' : 'text-danger'}">${response.status}</span><br>
                                                                                                                                            <strong>Resultado:</strong> ${response.ok ? '‚úÖ Sucesso' : '‚ùå Falhou'}<br>
                                                                                                                                            ${response.ok ? `<strong>Resposta:</strong> ${responseData.message || 'OK'}` : `<strong>Erro:</strong> Acesso negado`}<br>
                                                                                                                                            ${responseData.csrfValidated ? '<strong>üõ°Ô∏è CSRF:</strong> Validado<br>' : ''}
                                                                                                                                            <small class="text-muted">${new Date().toLocaleTimeString()}</small>
                                                                                                                                        </div>
                                                                                                                                    </div>
                                                                                                                                `;
                appendTestResults(resultHtml);
            } catch (error) {
                const errorHtml = `
                                                                                                                                    <div class="border-bottom pb-2 mb-2">
                                                                                                                                        <div class="text-danger small">
                                                                                                                                            <strong>DELETE /${endpoint}</strong> (Original)<br>
                                                                                                                                            <strong>‚ùå Erro:</strong> ${error.message}<br>
                                                                                                                                            <small class="text-muted">${new Date().toLocaleTimeString()}</small>
                                                                                                                                        </div>
                                                                                                                                    </div>
                                                                                                                                `;
                appendTestResults(errorHtml);
            }
        }

        function appendTestResults(html) {
            const resultsDiv = document.getElementById('testResults');
            if (resultsDiv.innerHTML.includes('Os resultados dos testes aparecer√£o aqui')) {
                resultsDiv.innerHTML = html;
            } else {
                resultsDiv.innerHTML = html + resultsDiv.innerHTML;
            }
            resultsDiv.scrollTop = 0; // Scroll para o topo para ver o resultado mais recente
        }

        function clearTestResults() {
            document.getElementById('testResults').innerHTML = '<p class="text-muted mb-0 small">Os resultados dos testes aparecer√£o aqui...</p>';
        }

        // Fun√ß√µes para teste CSRF
        async function testWithoutCSRF() {
            try {
                const response = await fetch('/api/antiforgery/validate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('jwt_token')}`
                    },
                    body: JSON.stringify({ test: 'Teste sem CSRF' })
                });

                if (response.status === 400) {
                    document.getElementById('csrfTestResults').innerHTML =
                        `<div class="text-success">‚úÖ Prote√ß√£o funcionando! Status 400 - Token CSRF necess√°rio</div>`;
                } else {
                    document.getElementById('csrfTestResults').innerHTML =
                        `<div class="text-warning">‚ö†Ô∏è Resposta inesperada: ${response.status} (Deveria retornar 400!)</div>`;
                }
            } catch (error) {
                document.getElementById('csrfTestResults').innerHTML =
                    `<div class="text-success">‚úÖ Prote√ß√£o funcionando! Erro: ${error.message}</div>`;
            }
        }

        async function testWithCSRF() {
            const result = await window.csrfHelper.testValidation();
            document.getElementById('csrfTestResults').innerHTML =
                `<div class="text-${result ? 'success' : 'danger'}">
                                                                                                                                    ${result ? '‚úÖ Teste com CSRF bem-sucedido' : '‚ùå Falha inesperada'}
                                                                                                                                 </div>`;
        }

        // Fun√ß√µes XSS foram movidas para admin-functions.js
    </script>
}